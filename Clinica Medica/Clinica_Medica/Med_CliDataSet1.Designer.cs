//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Clinica_Medica {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("Med_CliDataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class Med_CliDataSet1 : global::System.Data.DataSet {
        
        private PacientesDataTable tablePacientes;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public Med_CliDataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected Med_CliDataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Pacientes"] != null)) {
                    base.Tables.Add(new PacientesDataTable(ds.Tables["Pacientes"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PacientesDataTable Pacientes {
            get {
                return this.tablePacientes;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            Med_CliDataSet1 cln = ((Med_CliDataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Pacientes"] != null)) {
                    base.Tables.Add(new PacientesDataTable(ds.Tables["Pacientes"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablePacientes = ((PacientesDataTable)(base.Tables["Pacientes"]));
            if ((initTable == true)) {
                if ((this.tablePacientes != null)) {
                    this.tablePacientes.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitClass() {
            this.DataSetName = "Med_CliDataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/Med_CliDataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablePacientes = new PacientesDataTable();
            base.Tables.Add(this.tablePacientes);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializePacientes() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            Med_CliDataSet1 ds = new Med_CliDataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void PacientesRowChangeEventHandler(object sender, PacientesRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PacientesDataTable : global::System.Data.TypedTableBase<PacientesRow> {
            
            private global::System.Data.DataColumn columncod_paciente;
            
            private global::System.Data.DataColumn columnnome_paciente;
            
            private global::System.Data.DataColumn columncpf_paciente;
            
            private global::System.Data.DataColumn columndtnasc_paciente;
            
            private global::System.Data.DataColumn columntel_paciente;
            
            private global::System.Data.DataColumn columnemail_paciente;
            
            private global::System.Data.DataColumn columnestadociv_paciente;
            
            private global::System.Data.DataColumn columntiposang_paciente;
            
            private global::System.Data.DataColumn columnrh_paciente;
            
            private global::System.Data.DataColumn columncep_paciente;
            
            private global::System.Data.DataColumn columnlogradouro_paciente;
            
            private global::System.Data.DataColumn columnnumero_paciente;
            
            private global::System.Data.DataColumn columnbairro_paciente;
            
            private global::System.Data.DataColumn columnuf_paciente;
            
            private global::System.Data.DataColumn columncomplemento_paciente;
            
            private global::System.Data.DataColumn columncidade_paciente;
            
            private global::System.Data.DataColumn columnnomeacomp_paciente;
            
            private global::System.Data.DataColumn columntelacomp_paciente;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public PacientesDataTable() {
                this.TableName = "Pacientes";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal PacientesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected PacientesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn cod_pacienteColumn {
                get {
                    return this.columncod_paciente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn nome_pacienteColumn {
                get {
                    return this.columnnome_paciente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn cpf_pacienteColumn {
                get {
                    return this.columncpf_paciente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn dtnasc_pacienteColumn {
                get {
                    return this.columndtnasc_paciente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn tel_pacienteColumn {
                get {
                    return this.columntel_paciente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn email_pacienteColumn {
                get {
                    return this.columnemail_paciente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn estadociv_pacienteColumn {
                get {
                    return this.columnestadociv_paciente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn tiposang_pacienteColumn {
                get {
                    return this.columntiposang_paciente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn rh_pacienteColumn {
                get {
                    return this.columnrh_paciente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn cep_pacienteColumn {
                get {
                    return this.columncep_paciente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn logradouro_pacienteColumn {
                get {
                    return this.columnlogradouro_paciente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn numero_pacienteColumn {
                get {
                    return this.columnnumero_paciente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn bairro_pacienteColumn {
                get {
                    return this.columnbairro_paciente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn uf_pacienteColumn {
                get {
                    return this.columnuf_paciente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn complemento_pacienteColumn {
                get {
                    return this.columncomplemento_paciente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn cidade_pacienteColumn {
                get {
                    return this.columncidade_paciente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn nomeacomp_pacienteColumn {
                get {
                    return this.columnnomeacomp_paciente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn telacomp_pacienteColumn {
                get {
                    return this.columntelacomp_paciente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public PacientesRow this[int index] {
                get {
                    return ((PacientesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event PacientesRowChangeEventHandler PacientesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event PacientesRowChangeEventHandler PacientesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event PacientesRowChangeEventHandler PacientesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event PacientesRowChangeEventHandler PacientesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddPacientesRow(PacientesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public PacientesRow AddPacientesRow(
                        string nome_paciente, 
                        string cpf_paciente, 
                        System.DateTime dtnasc_paciente, 
                        string tel_paciente, 
                        string email_paciente, 
                        string estadociv_paciente, 
                        string tiposang_paciente, 
                        string rh_paciente, 
                        string cep_paciente, 
                        string logradouro_paciente, 
                        string numero_paciente, 
                        string bairro_paciente, 
                        string uf_paciente, 
                        string complemento_paciente, 
                        string cidade_paciente, 
                        string nomeacomp_paciente, 
                        string telacomp_paciente) {
                PacientesRow rowPacientesRow = ((PacientesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        nome_paciente,
                        cpf_paciente,
                        dtnasc_paciente,
                        tel_paciente,
                        email_paciente,
                        estadociv_paciente,
                        tiposang_paciente,
                        rh_paciente,
                        cep_paciente,
                        logradouro_paciente,
                        numero_paciente,
                        bairro_paciente,
                        uf_paciente,
                        complemento_paciente,
                        cidade_paciente,
                        nomeacomp_paciente,
                        telacomp_paciente};
                rowPacientesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPacientesRow);
                return rowPacientesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public PacientesRow FindBycod_paciente(int cod_paciente) {
                return ((PacientesRow)(this.Rows.Find(new object[] {
                            cod_paciente})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PacientesDataTable cln = ((PacientesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PacientesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columncod_paciente = base.Columns["cod_paciente"];
                this.columnnome_paciente = base.Columns["nome_paciente"];
                this.columncpf_paciente = base.Columns["cpf_paciente"];
                this.columndtnasc_paciente = base.Columns["dtnasc_paciente"];
                this.columntel_paciente = base.Columns["tel_paciente"];
                this.columnemail_paciente = base.Columns["email_paciente"];
                this.columnestadociv_paciente = base.Columns["estadociv_paciente"];
                this.columntiposang_paciente = base.Columns["tiposang_paciente"];
                this.columnrh_paciente = base.Columns["rh_paciente"];
                this.columncep_paciente = base.Columns["cep_paciente"];
                this.columnlogradouro_paciente = base.Columns["logradouro_paciente"];
                this.columnnumero_paciente = base.Columns["numero_paciente"];
                this.columnbairro_paciente = base.Columns["bairro_paciente"];
                this.columnuf_paciente = base.Columns["uf_paciente"];
                this.columncomplemento_paciente = base.Columns["complemento_paciente"];
                this.columncidade_paciente = base.Columns["cidade_paciente"];
                this.columnnomeacomp_paciente = base.Columns["nomeacomp_paciente"];
                this.columntelacomp_paciente = base.Columns["telacomp_paciente"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columncod_paciente = new global::System.Data.DataColumn("cod_paciente", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncod_paciente);
                this.columnnome_paciente = new global::System.Data.DataColumn("nome_paciente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnome_paciente);
                this.columncpf_paciente = new global::System.Data.DataColumn("cpf_paciente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncpf_paciente);
                this.columndtnasc_paciente = new global::System.Data.DataColumn("dtnasc_paciente", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndtnasc_paciente);
                this.columntel_paciente = new global::System.Data.DataColumn("tel_paciente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntel_paciente);
                this.columnemail_paciente = new global::System.Data.DataColumn("email_paciente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail_paciente);
                this.columnestadociv_paciente = new global::System.Data.DataColumn("estadociv_paciente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnestadociv_paciente);
                this.columntiposang_paciente = new global::System.Data.DataColumn("tiposang_paciente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntiposang_paciente);
                this.columnrh_paciente = new global::System.Data.DataColumn("rh_paciente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrh_paciente);
                this.columncep_paciente = new global::System.Data.DataColumn("cep_paciente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncep_paciente);
                this.columnlogradouro_paciente = new global::System.Data.DataColumn("logradouro_paciente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlogradouro_paciente);
                this.columnnumero_paciente = new global::System.Data.DataColumn("numero_paciente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnumero_paciente);
                this.columnbairro_paciente = new global::System.Data.DataColumn("bairro_paciente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbairro_paciente);
                this.columnuf_paciente = new global::System.Data.DataColumn("uf_paciente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuf_paciente);
                this.columncomplemento_paciente = new global::System.Data.DataColumn("complemento_paciente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncomplemento_paciente);
                this.columncidade_paciente = new global::System.Data.DataColumn("cidade_paciente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncidade_paciente);
                this.columnnomeacomp_paciente = new global::System.Data.DataColumn("nomeacomp_paciente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnomeacomp_paciente);
                this.columntelacomp_paciente = new global::System.Data.DataColumn("telacomp_paciente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntelacomp_paciente);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncod_paciente}, true));
                this.columncod_paciente.AutoIncrement = true;
                this.columncod_paciente.AutoIncrementSeed = -1;
                this.columncod_paciente.AutoIncrementStep = -1;
                this.columncod_paciente.AllowDBNull = false;
                this.columncod_paciente.ReadOnly = true;
                this.columncod_paciente.Unique = true;
                this.columnnome_paciente.AllowDBNull = false;
                this.columnnome_paciente.MaxLength = 100;
                this.columncpf_paciente.AllowDBNull = false;
                this.columncpf_paciente.MaxLength = 14;
                this.columndtnasc_paciente.AllowDBNull = false;
                this.columntel_paciente.AllowDBNull = false;
                this.columntel_paciente.MaxLength = 14;
                this.columnemail_paciente.AllowDBNull = false;
                this.columnemail_paciente.MaxLength = 100;
                this.columnestadociv_paciente.AllowDBNull = false;
                this.columnestadociv_paciente.MaxLength = 20;
                this.columntiposang_paciente.AllowDBNull = false;
                this.columntiposang_paciente.MaxLength = 2;
                this.columnrh_paciente.AllowDBNull = false;
                this.columnrh_paciente.MaxLength = 8;
                this.columncep_paciente.AllowDBNull = false;
                this.columncep_paciente.MaxLength = 9;
                this.columnlogradouro_paciente.AllowDBNull = false;
                this.columnlogradouro_paciente.MaxLength = 100;
                this.columnnumero_paciente.AllowDBNull = false;
                this.columnnumero_paciente.MaxLength = 10;
                this.columnbairro_paciente.AllowDBNull = false;
                this.columnbairro_paciente.MaxLength = 40;
                this.columnuf_paciente.AllowDBNull = false;
                this.columnuf_paciente.MaxLength = 2;
                this.columncomplemento_paciente.MaxLength = 40;
                this.columncidade_paciente.AllowDBNull = false;
                this.columncidade_paciente.MaxLength = 40;
                this.columnnomeacomp_paciente.MaxLength = 100;
                this.columntelacomp_paciente.MaxLength = 14;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public PacientesRow NewPacientesRow() {
                return ((PacientesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PacientesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PacientesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PacientesRowChanged != null)) {
                    this.PacientesRowChanged(this, new PacientesRowChangeEvent(((PacientesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PacientesRowChanging != null)) {
                    this.PacientesRowChanging(this, new PacientesRowChangeEvent(((PacientesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PacientesRowDeleted != null)) {
                    this.PacientesRowDeleted(this, new PacientesRowChangeEvent(((PacientesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PacientesRowDeleting != null)) {
                    this.PacientesRowDeleting(this, new PacientesRowChangeEvent(((PacientesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemovePacientesRow(PacientesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Med_CliDataSet1 ds = new Med_CliDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PacientesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PacientesRow : global::System.Data.DataRow {
            
            private PacientesDataTable tablePacientes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal PacientesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePacientes = ((PacientesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int cod_paciente {
                get {
                    return ((int)(this[this.tablePacientes.cod_pacienteColumn]));
                }
                set {
                    this[this.tablePacientes.cod_pacienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string nome_paciente {
                get {
                    return ((string)(this[this.tablePacientes.nome_pacienteColumn]));
                }
                set {
                    this[this.tablePacientes.nome_pacienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string cpf_paciente {
                get {
                    return ((string)(this[this.tablePacientes.cpf_pacienteColumn]));
                }
                set {
                    this[this.tablePacientes.cpf_pacienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime dtnasc_paciente {
                get {
                    return ((global::System.DateTime)(this[this.tablePacientes.dtnasc_pacienteColumn]));
                }
                set {
                    this[this.tablePacientes.dtnasc_pacienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string tel_paciente {
                get {
                    return ((string)(this[this.tablePacientes.tel_pacienteColumn]));
                }
                set {
                    this[this.tablePacientes.tel_pacienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string email_paciente {
                get {
                    return ((string)(this[this.tablePacientes.email_pacienteColumn]));
                }
                set {
                    this[this.tablePacientes.email_pacienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string estadociv_paciente {
                get {
                    return ((string)(this[this.tablePacientes.estadociv_pacienteColumn]));
                }
                set {
                    this[this.tablePacientes.estadociv_pacienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string tiposang_paciente {
                get {
                    return ((string)(this[this.tablePacientes.tiposang_pacienteColumn]));
                }
                set {
                    this[this.tablePacientes.tiposang_pacienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string rh_paciente {
                get {
                    return ((string)(this[this.tablePacientes.rh_pacienteColumn]));
                }
                set {
                    this[this.tablePacientes.rh_pacienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string cep_paciente {
                get {
                    return ((string)(this[this.tablePacientes.cep_pacienteColumn]));
                }
                set {
                    this[this.tablePacientes.cep_pacienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string logradouro_paciente {
                get {
                    return ((string)(this[this.tablePacientes.logradouro_pacienteColumn]));
                }
                set {
                    this[this.tablePacientes.logradouro_pacienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string numero_paciente {
                get {
                    return ((string)(this[this.tablePacientes.numero_pacienteColumn]));
                }
                set {
                    this[this.tablePacientes.numero_pacienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string bairro_paciente {
                get {
                    return ((string)(this[this.tablePacientes.bairro_pacienteColumn]));
                }
                set {
                    this[this.tablePacientes.bairro_pacienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string uf_paciente {
                get {
                    return ((string)(this[this.tablePacientes.uf_pacienteColumn]));
                }
                set {
                    this[this.tablePacientes.uf_pacienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string complemento_paciente {
                get {
                    try {
                        return ((string)(this[this.tablePacientes.complemento_pacienteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'complemento_paciente\' na tabela \'Pacientes\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tablePacientes.complemento_pacienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string cidade_paciente {
                get {
                    return ((string)(this[this.tablePacientes.cidade_pacienteColumn]));
                }
                set {
                    this[this.tablePacientes.cidade_pacienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string nomeacomp_paciente {
                get {
                    try {
                        return ((string)(this[this.tablePacientes.nomeacomp_pacienteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'nomeacomp_paciente\' na tabela \'Pacientes\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tablePacientes.nomeacomp_pacienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string telacomp_paciente {
                get {
                    try {
                        return ((string)(this[this.tablePacientes.telacomp_pacienteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("O valor da coluna \'telacomp_paciente\' na tabela \'Pacientes\' é DBNull.", e);
                    }
                }
                set {
                    this[this.tablePacientes.telacomp_pacienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Iscomplemento_pacienteNull() {
                return this.IsNull(this.tablePacientes.complemento_pacienteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setcomplemento_pacienteNull() {
                this[this.tablePacientes.complemento_pacienteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isnomeacomp_pacienteNull() {
                return this.IsNull(this.tablePacientes.nomeacomp_pacienteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setnomeacomp_pacienteNull() {
                this[this.tablePacientes.nomeacomp_pacienteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Istelacomp_pacienteNull() {
                return this.IsNull(this.tablePacientes.telacomp_pacienteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Settelacomp_pacienteNull() {
                this[this.tablePacientes.telacomp_pacienteColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class PacientesRowChangeEvent : global::System.EventArgs {
            
            private PacientesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public PacientesRowChangeEvent(PacientesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public PacientesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Clinica_Medica.Med_CliDataSet1TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PacientesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public PacientesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Pacientes";
            tableMapping.ColumnMappings.Add("cod_paciente", "cod_paciente");
            tableMapping.ColumnMappings.Add("nome_paciente", "nome_paciente");
            tableMapping.ColumnMappings.Add("cpf_paciente", "cpf_paciente");
            tableMapping.ColumnMappings.Add("dtnasc_paciente", "dtnasc_paciente");
            tableMapping.ColumnMappings.Add("tel_paciente", "tel_paciente");
            tableMapping.ColumnMappings.Add("email_paciente", "email_paciente");
            tableMapping.ColumnMappings.Add("estadociv_paciente", "estadociv_paciente");
            tableMapping.ColumnMappings.Add("tiposang_paciente", "tiposang_paciente");
            tableMapping.ColumnMappings.Add("rh_paciente", "rh_paciente");
            tableMapping.ColumnMappings.Add("cep_paciente", "cep_paciente");
            tableMapping.ColumnMappings.Add("logradouro_paciente", "logradouro_paciente");
            tableMapping.ColumnMappings.Add("numero_paciente", "numero_paciente");
            tableMapping.ColumnMappings.Add("bairro_paciente", "bairro_paciente");
            tableMapping.ColumnMappings.Add("uf_paciente", "uf_paciente");
            tableMapping.ColumnMappings.Add("complemento_paciente", "complemento_paciente");
            tableMapping.ColumnMappings.Add("cidade_paciente", "cidade_paciente");
            tableMapping.ColumnMappings.Add("nomeacomp_paciente", "nomeacomp_paciente");
            tableMapping.ColumnMappings.Add("telacomp_paciente", "telacomp_paciente");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Pacientes] WHERE (([cod_paciente] = @Original_cod_paciente) AND ([nome_paciente] = @Original_nome_paciente) AND ([cpf_paciente] = @Original_cpf_paciente) AND ([dtnasc_paciente] = @Original_dtnasc_paciente) AND ([tel_paciente] = @Original_tel_paciente) AND ([email_paciente] = @Original_email_paciente) AND ([estadociv_paciente] = @Original_estadociv_paciente) AND ([tiposang_paciente] = @Original_tiposang_paciente) AND ([rh_paciente] = @Original_rh_paciente) AND ([cep_paciente] = @Original_cep_paciente) AND ([logradouro_paciente] = @Original_logradouro_paciente) AND ([numero_paciente] = @Original_numero_paciente) AND ([bairro_paciente] = @Original_bairro_paciente) AND ([uf_paciente] = @Original_uf_paciente) AND ((@IsNull_complemento_paciente = 1 AND [complemento_paciente] IS NULL) OR ([complemento_paciente] = @Original_complemento_paciente)) AND ([cidade_paciente] = @Original_cidade_paciente) AND ((@IsNull_nomeacomp_paciente = 1 AND [nomeacomp_paciente] IS NULL) OR ([nomeacomp_paciente] = @Original_nomeacomp_paciente)) AND ((@IsNull_telacomp_paciente = 1 AND [telacomp_paciente] IS NULL) OR ([telacomp_paciente] = @Original_telacomp_paciente)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_cod_paciente", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cod_paciente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nome_paciente", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nome_paciente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_cpf_paciente", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cpf_paciente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dtnasc_paciente", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dtnasc_paciente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_tel_paciente", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "tel_paciente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_email_paciente", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email_paciente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_estadociv_paciente", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "estadociv_paciente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_tiposang_paciente", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "tiposang_paciente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_rh_paciente", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rh_paciente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_cep_paciente", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cep_paciente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_logradouro_paciente", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "logradouro_paciente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_numero_paciente", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "numero_paciente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_bairro_paciente", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bairro_paciente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_uf_paciente", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uf_paciente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_complemento_paciente", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "complemento_paciente", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_complemento_paciente", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "complemento_paciente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_cidade_paciente", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cidade_paciente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_nomeacomp_paciente", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nomeacomp_paciente", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nomeacomp_paciente", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nomeacomp_paciente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_telacomp_paciente", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "telacomp_paciente", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_telacomp_paciente", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "telacomp_paciente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Pacientes] ([nome_paciente], [cpf_paciente], [dtnasc_paciente], [tel_paciente], [email_paciente], [estadociv_paciente], [tiposang_paciente], [rh_paciente], [cep_paciente], [logradouro_paciente], [numero_paciente], [bairro_paciente], [uf_paciente], [complemento_paciente], [cidade_paciente], [nomeacomp_paciente], [telacomp_paciente]) VALUES (@nome_paciente, @cpf_paciente, @dtnasc_paciente, @tel_paciente, @email_paciente, @estadociv_paciente, @tiposang_paciente, @rh_paciente, @cep_paciente, @logradouro_paciente, @numero_paciente, @bairro_paciente, @uf_paciente, @complemento_paciente, @cidade_paciente, @nomeacomp_paciente, @telacomp_paciente);
SELECT cod_paciente, nome_paciente, cpf_paciente, dtnasc_paciente, tel_paciente, email_paciente, estadociv_paciente, tiposang_paciente, rh_paciente, cep_paciente, logradouro_paciente, numero_paciente, bairro_paciente, uf_paciente, complemento_paciente, cidade_paciente, nomeacomp_paciente, telacomp_paciente FROM Pacientes WHERE (cod_paciente = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nome_paciente", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nome_paciente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cpf_paciente", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cpf_paciente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dtnasc_paciente", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dtnasc_paciente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tel_paciente", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "tel_paciente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@email_paciente", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email_paciente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@estadociv_paciente", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "estadociv_paciente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tiposang_paciente", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "tiposang_paciente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rh_paciente", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rh_paciente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cep_paciente", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cep_paciente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@logradouro_paciente", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "logradouro_paciente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@numero_paciente", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "numero_paciente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bairro_paciente", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bairro_paciente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@uf_paciente", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uf_paciente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@complemento_paciente", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "complemento_paciente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cidade_paciente", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cidade_paciente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nomeacomp_paciente", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nomeacomp_paciente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@telacomp_paciente", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "telacomp_paciente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Pacientes] SET [nome_paciente] = @nome_paciente, [cpf_paciente] = @" +
                "cpf_paciente, [dtnasc_paciente] = @dtnasc_paciente, [tel_paciente] = @tel_pacien" +
                "te, [email_paciente] = @email_paciente, [estadociv_paciente] = @estadociv_pacien" +
                "te, [tiposang_paciente] = @tiposang_paciente, [rh_paciente] = @rh_paciente, [cep" +
                "_paciente] = @cep_paciente, [logradouro_paciente] = @logradouro_paciente, [numer" +
                "o_paciente] = @numero_paciente, [bairro_paciente] = @bairro_paciente, [uf_pacien" +
                "te] = @uf_paciente, [complemento_paciente] = @complemento_paciente, [cidade_paci" +
                "ente] = @cidade_paciente, [nomeacomp_paciente] = @nomeacomp_paciente, [telacomp_" +
                "paciente] = @telacomp_paciente WHERE (([cod_paciente] = @Original_cod_paciente) " +
                "AND ([nome_paciente] = @Original_nome_paciente) AND ([cpf_paciente] = @Original_" +
                "cpf_paciente) AND ([dtnasc_paciente] = @Original_dtnasc_paciente) AND ([tel_paci" +
                "ente] = @Original_tel_paciente) AND ([email_paciente] = @Original_email_paciente" +
                ") AND ([estadociv_paciente] = @Original_estadociv_paciente) AND ([tiposang_pacie" +
                "nte] = @Original_tiposang_paciente) AND ([rh_paciente] = @Original_rh_paciente) " +
                "AND ([cep_paciente] = @Original_cep_paciente) AND ([logradouro_paciente] = @Orig" +
                "inal_logradouro_paciente) AND ([numero_paciente] = @Original_numero_paciente) AN" +
                "D ([bairro_paciente] = @Original_bairro_paciente) AND ([uf_paciente] = @Original" +
                "_uf_paciente) AND ((@IsNull_complemento_paciente = 1 AND [complemento_paciente] " +
                "IS NULL) OR ([complemento_paciente] = @Original_complemento_paciente)) AND ([cid" +
                "ade_paciente] = @Original_cidade_paciente) AND ((@IsNull_nomeacomp_paciente = 1 " +
                "AND [nomeacomp_paciente] IS NULL) OR ([nomeacomp_paciente] = @Original_nomeacomp" +
                "_paciente)) AND ((@IsNull_telacomp_paciente = 1 AND [telacomp_paciente] IS NULL)" +
                " OR ([telacomp_paciente] = @Original_telacomp_paciente)));\r\nSELECT cod_paciente," +
                " nome_paciente, cpf_paciente, dtnasc_paciente, tel_paciente, email_paciente, est" +
                "adociv_paciente, tiposang_paciente, rh_paciente, cep_paciente, logradouro_pacien" +
                "te, numero_paciente, bairro_paciente, uf_paciente, complemento_paciente, cidade_" +
                "paciente, nomeacomp_paciente, telacomp_paciente FROM Pacientes WHERE (cod_pacien" +
                "te = @cod_paciente)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nome_paciente", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nome_paciente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cpf_paciente", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cpf_paciente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dtnasc_paciente", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dtnasc_paciente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tel_paciente", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "tel_paciente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@email_paciente", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email_paciente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@estadociv_paciente", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "estadociv_paciente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tiposang_paciente", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "tiposang_paciente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rh_paciente", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rh_paciente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cep_paciente", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cep_paciente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@logradouro_paciente", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "logradouro_paciente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@numero_paciente", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "numero_paciente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bairro_paciente", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bairro_paciente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@uf_paciente", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uf_paciente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@complemento_paciente", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "complemento_paciente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cidade_paciente", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cidade_paciente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nomeacomp_paciente", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nomeacomp_paciente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@telacomp_paciente", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "telacomp_paciente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_cod_paciente", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cod_paciente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nome_paciente", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nome_paciente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_cpf_paciente", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cpf_paciente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dtnasc_paciente", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dtnasc_paciente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_tel_paciente", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "tel_paciente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_email_paciente", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email_paciente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_estadociv_paciente", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "estadociv_paciente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_tiposang_paciente", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "tiposang_paciente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_rh_paciente", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rh_paciente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_cep_paciente", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cep_paciente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_logradouro_paciente", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "logradouro_paciente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_numero_paciente", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "numero_paciente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_bairro_paciente", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bairro_paciente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_uf_paciente", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uf_paciente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_complemento_paciente", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "complemento_paciente", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_complemento_paciente", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "complemento_paciente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_cidade_paciente", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cidade_paciente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_nomeacomp_paciente", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nomeacomp_paciente", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_nomeacomp_paciente", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "nomeacomp_paciente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_telacomp_paciente", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "telacomp_paciente", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_telacomp_paciente", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "telacomp_paciente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cod_paciente", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "cod_paciente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Clinica_Medica.Properties.Settings.Default.conexao;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT cod_paciente, nome_paciente, cpf_paciente, dtnasc_paciente, tel_paciente, email_paciente, estadociv_paciente, tiposang_paciente, rh_paciente, cep_paciente, logradouro_paciente, numero_paciente, bairro_paciente, uf_paciente, complemento_paciente, cidade_paciente, nomeacomp_paciente, telacomp_paciente FROM dbo.Pacientes";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Med_CliDataSet1.PacientesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Med_CliDataSet1.PacientesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Med_CliDataSet1.PacientesDataTable dataTable = new Med_CliDataSet1.PacientesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Med_CliDataSet1.PacientesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Med_CliDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "Pacientes");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_cod_paciente, 
                    string Original_nome_paciente, 
                    string Original_cpf_paciente, 
                    System.DateTime Original_dtnasc_paciente, 
                    string Original_tel_paciente, 
                    string Original_email_paciente, 
                    string Original_estadociv_paciente, 
                    string Original_tiposang_paciente, 
                    string Original_rh_paciente, 
                    string Original_cep_paciente, 
                    string Original_logradouro_paciente, 
                    string Original_numero_paciente, 
                    string Original_bairro_paciente, 
                    string Original_uf_paciente, 
                    string Original_complemento_paciente, 
                    string Original_cidade_paciente, 
                    string Original_nomeacomp_paciente, 
                    string Original_telacomp_paciente) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_cod_paciente));
            if ((Original_nome_paciente == null)) {
                throw new global::System.ArgumentNullException("Original_nome_paciente");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_nome_paciente));
            }
            if ((Original_cpf_paciente == null)) {
                throw new global::System.ArgumentNullException("Original_cpf_paciente");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_cpf_paciente));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_dtnasc_paciente));
            if ((Original_tel_paciente == null)) {
                throw new global::System.ArgumentNullException("Original_tel_paciente");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_tel_paciente));
            }
            if ((Original_email_paciente == null)) {
                throw new global::System.ArgumentNullException("Original_email_paciente");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_email_paciente));
            }
            if ((Original_estadociv_paciente == null)) {
                throw new global::System.ArgumentNullException("Original_estadociv_paciente");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_estadociv_paciente));
            }
            if ((Original_tiposang_paciente == null)) {
                throw new global::System.ArgumentNullException("Original_tiposang_paciente");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_tiposang_paciente));
            }
            if ((Original_rh_paciente == null)) {
                throw new global::System.ArgumentNullException("Original_rh_paciente");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_rh_paciente));
            }
            if ((Original_cep_paciente == null)) {
                throw new global::System.ArgumentNullException("Original_cep_paciente");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_cep_paciente));
            }
            if ((Original_logradouro_paciente == null)) {
                throw new global::System.ArgumentNullException("Original_logradouro_paciente");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_logradouro_paciente));
            }
            if ((Original_numero_paciente == null)) {
                throw new global::System.ArgumentNullException("Original_numero_paciente");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_numero_paciente));
            }
            if ((Original_bairro_paciente == null)) {
                throw new global::System.ArgumentNullException("Original_bairro_paciente");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_bairro_paciente));
            }
            if ((Original_uf_paciente == null)) {
                throw new global::System.ArgumentNullException("Original_uf_paciente");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_uf_paciente));
            }
            if ((Original_complemento_paciente == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_complemento_paciente));
            }
            if ((Original_cidade_paciente == null)) {
                throw new global::System.ArgumentNullException("Original_cidade_paciente");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_cidade_paciente));
            }
            if ((Original_nomeacomp_paciente == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_nomeacomp_paciente));
            }
            if ((Original_telacomp_paciente == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_telacomp_paciente));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string nome_paciente, 
                    string cpf_paciente, 
                    System.DateTime dtnasc_paciente, 
                    string tel_paciente, 
                    string email_paciente, 
                    string estadociv_paciente, 
                    string tiposang_paciente, 
                    string rh_paciente, 
                    string cep_paciente, 
                    string logradouro_paciente, 
                    string numero_paciente, 
                    string bairro_paciente, 
                    string uf_paciente, 
                    string complemento_paciente, 
                    string cidade_paciente, 
                    string nomeacomp_paciente, 
                    string telacomp_paciente) {
            if ((nome_paciente == null)) {
                throw new global::System.ArgumentNullException("nome_paciente");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(nome_paciente));
            }
            if ((cpf_paciente == null)) {
                throw new global::System.ArgumentNullException("cpf_paciente");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(cpf_paciente));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(dtnasc_paciente));
            if ((tel_paciente == null)) {
                throw new global::System.ArgumentNullException("tel_paciente");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(tel_paciente));
            }
            if ((email_paciente == null)) {
                throw new global::System.ArgumentNullException("email_paciente");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(email_paciente));
            }
            if ((estadociv_paciente == null)) {
                throw new global::System.ArgumentNullException("estadociv_paciente");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(estadociv_paciente));
            }
            if ((tiposang_paciente == null)) {
                throw new global::System.ArgumentNullException("tiposang_paciente");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(tiposang_paciente));
            }
            if ((rh_paciente == null)) {
                throw new global::System.ArgumentNullException("rh_paciente");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(rh_paciente));
            }
            if ((cep_paciente == null)) {
                throw new global::System.ArgumentNullException("cep_paciente");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(cep_paciente));
            }
            if ((logradouro_paciente == null)) {
                throw new global::System.ArgumentNullException("logradouro_paciente");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(logradouro_paciente));
            }
            if ((numero_paciente == null)) {
                throw new global::System.ArgumentNullException("numero_paciente");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(numero_paciente));
            }
            if ((bairro_paciente == null)) {
                throw new global::System.ArgumentNullException("bairro_paciente");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(bairro_paciente));
            }
            if ((uf_paciente == null)) {
                throw new global::System.ArgumentNullException("uf_paciente");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(uf_paciente));
            }
            if ((complemento_paciente == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(complemento_paciente));
            }
            if ((cidade_paciente == null)) {
                throw new global::System.ArgumentNullException("cidade_paciente");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(cidade_paciente));
            }
            if ((nomeacomp_paciente == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(nomeacomp_paciente));
            }
            if ((telacomp_paciente == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(telacomp_paciente));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string nome_paciente, 
                    string cpf_paciente, 
                    System.DateTime dtnasc_paciente, 
                    string tel_paciente, 
                    string email_paciente, 
                    string estadociv_paciente, 
                    string tiposang_paciente, 
                    string rh_paciente, 
                    string cep_paciente, 
                    string logradouro_paciente, 
                    string numero_paciente, 
                    string bairro_paciente, 
                    string uf_paciente, 
                    string complemento_paciente, 
                    string cidade_paciente, 
                    string nomeacomp_paciente, 
                    string telacomp_paciente, 
                    int Original_cod_paciente, 
                    string Original_nome_paciente, 
                    string Original_cpf_paciente, 
                    System.DateTime Original_dtnasc_paciente, 
                    string Original_tel_paciente, 
                    string Original_email_paciente, 
                    string Original_estadociv_paciente, 
                    string Original_tiposang_paciente, 
                    string Original_rh_paciente, 
                    string Original_cep_paciente, 
                    string Original_logradouro_paciente, 
                    string Original_numero_paciente, 
                    string Original_bairro_paciente, 
                    string Original_uf_paciente, 
                    string Original_complemento_paciente, 
                    string Original_cidade_paciente, 
                    string Original_nomeacomp_paciente, 
                    string Original_telacomp_paciente, 
                    int cod_paciente) {
            if ((nome_paciente == null)) {
                throw new global::System.ArgumentNullException("nome_paciente");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(nome_paciente));
            }
            if ((cpf_paciente == null)) {
                throw new global::System.ArgumentNullException("cpf_paciente");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(cpf_paciente));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(dtnasc_paciente));
            if ((tel_paciente == null)) {
                throw new global::System.ArgumentNullException("tel_paciente");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(tel_paciente));
            }
            if ((email_paciente == null)) {
                throw new global::System.ArgumentNullException("email_paciente");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(email_paciente));
            }
            if ((estadociv_paciente == null)) {
                throw new global::System.ArgumentNullException("estadociv_paciente");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(estadociv_paciente));
            }
            if ((tiposang_paciente == null)) {
                throw new global::System.ArgumentNullException("tiposang_paciente");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(tiposang_paciente));
            }
            if ((rh_paciente == null)) {
                throw new global::System.ArgumentNullException("rh_paciente");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(rh_paciente));
            }
            if ((cep_paciente == null)) {
                throw new global::System.ArgumentNullException("cep_paciente");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(cep_paciente));
            }
            if ((logradouro_paciente == null)) {
                throw new global::System.ArgumentNullException("logradouro_paciente");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(logradouro_paciente));
            }
            if ((numero_paciente == null)) {
                throw new global::System.ArgumentNullException("numero_paciente");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(numero_paciente));
            }
            if ((bairro_paciente == null)) {
                throw new global::System.ArgumentNullException("bairro_paciente");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(bairro_paciente));
            }
            if ((uf_paciente == null)) {
                throw new global::System.ArgumentNullException("uf_paciente");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(uf_paciente));
            }
            if ((complemento_paciente == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(complemento_paciente));
            }
            if ((cidade_paciente == null)) {
                throw new global::System.ArgumentNullException("cidade_paciente");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(cidade_paciente));
            }
            if ((nomeacomp_paciente == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(nomeacomp_paciente));
            }
            if ((telacomp_paciente == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(telacomp_paciente));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_cod_paciente));
            if ((Original_nome_paciente == null)) {
                throw new global::System.ArgumentNullException("Original_nome_paciente");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_nome_paciente));
            }
            if ((Original_cpf_paciente == null)) {
                throw new global::System.ArgumentNullException("Original_cpf_paciente");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_cpf_paciente));
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(Original_dtnasc_paciente));
            if ((Original_tel_paciente == null)) {
                throw new global::System.ArgumentNullException("Original_tel_paciente");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_tel_paciente));
            }
            if ((Original_email_paciente == null)) {
                throw new global::System.ArgumentNullException("Original_email_paciente");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_email_paciente));
            }
            if ((Original_estadociv_paciente == null)) {
                throw new global::System.ArgumentNullException("Original_estadociv_paciente");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_estadociv_paciente));
            }
            if ((Original_tiposang_paciente == null)) {
                throw new global::System.ArgumentNullException("Original_tiposang_paciente");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_tiposang_paciente));
            }
            if ((Original_rh_paciente == null)) {
                throw new global::System.ArgumentNullException("Original_rh_paciente");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_rh_paciente));
            }
            if ((Original_cep_paciente == null)) {
                throw new global::System.ArgumentNullException("Original_cep_paciente");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_cep_paciente));
            }
            if ((Original_logradouro_paciente == null)) {
                throw new global::System.ArgumentNullException("Original_logradouro_paciente");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_logradouro_paciente));
            }
            if ((Original_numero_paciente == null)) {
                throw new global::System.ArgumentNullException("Original_numero_paciente");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_numero_paciente));
            }
            if ((Original_bairro_paciente == null)) {
                throw new global::System.ArgumentNullException("Original_bairro_paciente");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_bairro_paciente));
            }
            if ((Original_uf_paciente == null)) {
                throw new global::System.ArgumentNullException("Original_uf_paciente");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_uf_paciente));
            }
            if ((Original_complemento_paciente == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_complemento_paciente));
            }
            if ((Original_cidade_paciente == null)) {
                throw new global::System.ArgumentNullException("Original_cidade_paciente");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_cidade_paciente));
            }
            if ((Original_nomeacomp_paciente == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_nomeacomp_paciente));
            }
            if ((Original_telacomp_paciente == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_telacomp_paciente));
            }
            this.Adapter.UpdateCommand.Parameters[38].Value = ((int)(cod_paciente));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string nome_paciente, 
                    string cpf_paciente, 
                    System.DateTime dtnasc_paciente, 
                    string tel_paciente, 
                    string email_paciente, 
                    string estadociv_paciente, 
                    string tiposang_paciente, 
                    string rh_paciente, 
                    string cep_paciente, 
                    string logradouro_paciente, 
                    string numero_paciente, 
                    string bairro_paciente, 
                    string uf_paciente, 
                    string complemento_paciente, 
                    string cidade_paciente, 
                    string nomeacomp_paciente, 
                    string telacomp_paciente, 
                    int Original_cod_paciente, 
                    string Original_nome_paciente, 
                    string Original_cpf_paciente, 
                    System.DateTime Original_dtnasc_paciente, 
                    string Original_tel_paciente, 
                    string Original_email_paciente, 
                    string Original_estadociv_paciente, 
                    string Original_tiposang_paciente, 
                    string Original_rh_paciente, 
                    string Original_cep_paciente, 
                    string Original_logradouro_paciente, 
                    string Original_numero_paciente, 
                    string Original_bairro_paciente, 
                    string Original_uf_paciente, 
                    string Original_complemento_paciente, 
                    string Original_cidade_paciente, 
                    string Original_nomeacomp_paciente, 
                    string Original_telacomp_paciente) {
            return this.Update(nome_paciente, cpf_paciente, dtnasc_paciente, tel_paciente, email_paciente, estadociv_paciente, tiposang_paciente, rh_paciente, cep_paciente, logradouro_paciente, numero_paciente, bairro_paciente, uf_paciente, complemento_paciente, cidade_paciente, nomeacomp_paciente, telacomp_paciente, Original_cod_paciente, Original_nome_paciente, Original_cpf_paciente, Original_dtnasc_paciente, Original_tel_paciente, Original_email_paciente, Original_estadociv_paciente, Original_tiposang_paciente, Original_rh_paciente, Original_cep_paciente, Original_logradouro_paciente, Original_numero_paciente, Original_bairro_paciente, Original_uf_paciente, Original_complemento_paciente, Original_cidade_paciente, Original_nomeacomp_paciente, Original_telacomp_paciente, Original_cod_paciente);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private PacientesTableAdapter _pacientesTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public PacientesTableAdapter PacientesTableAdapter {
            get {
                return this._pacientesTableAdapter;
            }
            set {
                this._pacientesTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._pacientesTableAdapter != null) 
                            && (this._pacientesTableAdapter.Connection != null))) {
                    return this._pacientesTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._pacientesTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateUpdatedRows(Med_CliDataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._pacientesTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Pacientes.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._pacientesTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateInsertedRows(Med_CliDataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._pacientesTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Pacientes.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._pacientesTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateDeletedRows(Med_CliDataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._pacientesTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Pacientes.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._pacientesTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public virtual int UpdateAll(Med_CliDataSet1 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._pacientesTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._pacientesTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Todos os TableAdapters gerenciados por um TableAdapterManager devem usar a mesma " +
                        "cadeia de conexão.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager não contém informações de conexão. Defina cada propriedade Ta" +
                        "bleAdapter de TableAdapterManager como uma instância válida de TableAdapter.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("Não é possível iniciar a transação. Os dados de conexão atuais não oferecem supor" +
                        "te às transações ou o estado atual não permite que a transação inicie.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._pacientesTableAdapter != null)) {
                    revertConnections.Add(this._pacientesTableAdapter, this._pacientesTableAdapter.Connection);
                    this._pacientesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._pacientesTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._pacientesTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._pacientesTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._pacientesTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._pacientesTableAdapter != null)) {
                    this._pacientesTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._pacientesTableAdapter]));
                    this._pacientesTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591